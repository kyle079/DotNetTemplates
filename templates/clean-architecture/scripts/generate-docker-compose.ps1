#!/usr/bin/env pwsh
<#
.SYNOPSIS
    Generates a docker-compose.yml file based on available docker compose files.

.DESCRIPTION
    This script creates a main docker-compose.yml that includes all the service
    files found in the docker directory.
#>

$ErrorActionPreference = "Stop"

$scriptDir = $PSScriptRoot
$rootDir = Split-Path $scriptDir -Parent
$dockerDir = Join-Path $rootDir "docker"
$outputFile = Join-Path $rootDir "docker-compose.yml"

# Find all docker-compose files in the docker directory
$dockerFiles = Get-ChildItem -Path $dockerDir -Filter "docker-compose.*.yml" | Sort-Object Name

if ($dockerFiles.Count -eq 0) {
    Write-Warning "No docker-compose files found in $dockerDir"
    exit 0
}

# Generate the docker-compose.yml content
$content = @"
version: '3.8'

# This file is auto-generated by generate-docker-compose.ps1
# To customize, create a docker-compose.override.yml file

include:
"@

foreach ($file in $dockerFiles) {
    $relativePath = "docker/$($file.Name)"
    $content += "`n  - $relativePath"
}

$content += @"


# The 'include' directive requires Docker Compose v2.20.0 or later
# If you're using an older version, you can run services individually:
"@

foreach ($file in $dockerFiles) {
    $serviceName = $file.Name -replace 'docker-compose\.(.*?)\.yml', '$1'
    $content += "`n# docker-compose -f docker/$($file.Name) up -d"
}

# Write the file
$content | Out-File -FilePath $outputFile -Encoding utf8 -NoNewline

Write-Host "[OK] Generated docker-compose.yml with the following services:" -ForegroundColor Green
foreach ($file in $dockerFiles) {
    $serviceName = $file.Name -replace 'docker-compose\.(.*?)\.yml', '$1'
    Write-Host "  - $serviceName" -ForegroundColor White
}